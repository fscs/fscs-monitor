name: CD - Build fscs-monitor

permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: set TimeZone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Europe/Berlin"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run tests
        run: cargo test
                
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Trunk
        uses: jetli/trunk-action@v0.5.0
        with:
          version: "latest"
      - name: Add wasm target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build the Rust WASM app and all of its assets
        run: trunk build --release --public-url ${{ steps.deployment.outputs.page_url }}

      - name: Upload a Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # A file, directory or wildcard pattern that describes what to upload
          path: "./dist"
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy GitHub Pages site
      if: github.event_name != 'pull_request'
      id: deployment
      uses: actions/deploy-pages@v4
